{"version":3,"sources":["components/services/Authservice.jsx","components/navbar/Searchbar.jsx","components/navbar/Navbar.jsx","components/auth/Signup.jsx","components/auth/Login.jsx","components/gmaps/Marker.tsx","components/gmaps/Gmaps.jsx","components/spots/OneSpot.jsx","components/services/SpotsService.jsx","components/Preload/Preload.jsx","components/spots/Spots.jsx","components/gmaps/LocationSearchInput.jsx","components/gmaps/GmapsLocate.jsx","components/create/Create.jsx","components/SpotCreation.jsx","components/Home/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["AuthService","signup","username","lastname","email","password","service","post","then","response","data","login","loggedin","get","logout","this","axios","create","baseURL","process","REACT_APP_API_URL","withCredentials","SearchBar","className","id","type","name","placeholder","onChange","e","props","search","class","Component","Navbar","handleLogout","state","loggedInUser","src","alt","to","onClick","Signup","handleFormSubmit","event","preventDefault","user","console","log","setState","getUser","savedUser","catch","error","handleChange","target","value","oculto","_this","setTimeout","onSubmit","required","Login","Marker","color","style","backgroundColor","cursor","title","SimpleMap","center","lng","coordinates","lat","zoom","bootstrapURLKeys","key","REACT_APP_API_KEY","defaultCenter","defaultZoom","OneSpot","spot","display","imageURL","country","wave_direction","SpotsService","allSpots","createSpots","location","nearby","rating","text","wave_form","weather","period","break_type","level","desired_height","vibe","consistence","addPicture","file","formData","FormData","append","headers","res","errHandler","getForecast","Preload","Fragment","Spots","spots","selectedSpot","showOneSpot","forecast","preload","fetch","Authorization","json","hours","map","index","displayOne","full","hideOne","comment","airTemperature","toFixed","waterTemperature","waveHeight","wavePeriod","windSpeed","LocationSearchInput","address","handleSelect","geocodeByAddress","results","getLatLng","latLng","getCoordinates","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","suggestion","active","description","lnglat","getLocation","Create","loct","getAllSpotsFn","history","push","image","files","upload","onPhotoChange","defaultValue","selected","withRouter","SpotCreation","spServices","cb","createNewSpot","Home","href","App","userObj","filtered","searchString","fetchUser","err","getAllSpots","filteredSpots","filter","item","toLowerCase","includes","searchSpots","checkSearch","exact","path","render","userInSession","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3127d5ad.chunk.js","sourcesContent":["import axios from \"axios\";\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api`,\n      withCredentials: true\n    });\n  }\n\n  signup = (username, lastname, email, password) => {\n    return this.service\n      .post(\"/auth/signup\", { username, lastname, email, password })\n      .then(response => response.data);\n  };\n\n  login = (email, password) => {\n    return this.service\n      .post(\"/auth/login\", { email, password })\n      .then(response => response.data);\n  };\n\n  loggedin = () => {\n    return this.service\n      .get(\"/auth/currentUser\")\n      .then(response => response.data);\n  };\n\n  logout = () => {\n    return this.service.get(\"/auth/logout\").then(response => response.data);\n  };\n}\n\nexport default AuthService;\n","import React, { Component } from \"react\";\nimport \"./Searchbar.css\";\n\nexport default class SearchBar extends Component {\n  render() {\n    return (\n      <div>\n        <form className=\"search-form\" id=\"test\">\n          <input\n            className=\"search\"\n            type=\"search\"\n            name=\"search\"\n            placeholder=\"Search spot...\"\n            onChange={e => this.props.search(e)}\n          ></input>\n          <i class=\"material-icons\">search</i>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"./../services/Authservice\";\nimport SearchBar from \"./Searchbar\";\nimport \"./Navbar.css\";\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n  }\n\n  handleLogout = e => {\n    this.props.logout();\n  };\n\n  render() {\n    if (this.props.loggedInUser) {\n      return (\n        <nav className=\"nav-bar\">\n          <img src=\"./images/logo.png\" alt=\"logo\" />\n          <SearchBar className=\"search-bar\" search={this.props.search} />\n          <div className=\"container-navbar-logged\">\n            <Link to=\"/\">HOME</Link> |\n            <Link onClick={this.handleLogout}>LOG OUT</Link> |\n            <Link to=\"/create\">NEW SPOT</Link>| <br />\n            <p>\n              {this.props.loggedInUser\n                ? this.props.loggedInUser.username\n                : null}\n            </p>\n          </div>\n        </nav>\n      );\n    } else {\n      return (\n        <nav className=\"nav-bar\">\n          <img src=\"./images/logo.png\" alt=\"logo\" />\n          <SearchBar className=\"search-bar\" search={this.props.search} />\n          <div className=\"container-navbar\">\n            <Link to=\"/\">HOME</Link> |<Link to=\"/signup\">SIGN UP</Link>|\n            <Link to=\"/login\">LOG IN</Link>\n          </div>\n        </nav>\n      );\n    }\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport AuthService from \"./../services/Authservice\";\nimport \"./Signup.css\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      lastname: \"\",\n      email: \"\",\n      password: \"\",\n      oculto: true\n    };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const username = this.state.username;\n    const lastname = this.state.lastname;\n    const email = this.state.email;\n    const password = this.state.password;\n    this.service\n      .signup(username, lastname, email, password)\n      .then(user => {\n        console.log(user);\n        this.setState({\n          username: \"\",\n          lastname: \"\",\n          email: \"\",\n          password: \"\"\n        });\n        this.props.getUser(user.savedUser);\n      })\n      .catch(error => {\n        console.log(error);\n        this.setState({\n          username: username,\n          lastname: lastname,\n          email: email,\n          password: password,\n          error: true\n        });\n      });\n  };\n\n  componentDidMount() {\n    let _this = this;\n    setTimeout(function() {\n      _this.setState({\n        ...this.state,\n        oculto: false\n      });\n    }, 10);\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    if (this.state.oculto === true) {\n      return (\n        <div className=\"signup oculto\">\n          <form onSubmit={this.handleFormSubmit}>\n            <h3>Create your account!</h3>\n            <fieldset>\n              <label>\n                {\" \"}\n                <i class=\"material-icons\">perm_identity</i>\n              </label>\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={e => this.handleChange(e)}\n                placeholder=\"Name\"\n                required\n              />\n            </fieldset>\n            <fieldset>\n              <label>\n                <i class=\"material-icons\">email</i>\n              </label>\n              <input\n                type=\"text\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={e => this.handleChange(e)}\n                placeholder=\"Email\"\n                required\n              />\n            </fieldset>\n            <fieldset>\n              <label>\n                <i class=\"material-icons\">lock</i>\n              </label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={e => this.handleChange(e)}\n                placeholder=\"********\"\n                required\n              />\n            </fieldset>\n            <div className=\"fatherbtn\">\n              <input className=\"button\" type=\"submit\" value=\"Sign up\" />\n            </div>\n          </form>\n          <h1>{this.state.error ? \"Error\" : \"\"}</h1>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"signup oculto mostrar\">\n          <form onSubmit={this.handleFormSubmit}>\n            <h3>Create your account!</h3>\n            <fieldset>\n              <label>\n                {\" \"}\n                <i class=\"material-icons\">perm_identity</i>\n              </label>\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={e => this.handleChange(e)}\n                placeholder=\"Name\"\n                required\n              />\n            </fieldset>\n            <fieldset>\n              <label>\n                <i class=\"material-icons\">email</i>\n              </label>\n              <input\n                type=\"text\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={e => this.handleChange(e)}\n                placeholder=\"Email\"\n                required\n              />\n            </fieldset>\n            <fieldset>\n              <label>\n                <i class=\"material-icons\">lock</i>\n              </label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={e => this.handleChange(e)}\n                placeholder=\"********\"\n                required\n              />\n            </fieldset>\n            <div className=\"fatherbtn\">\n              <input className=\"button\" type=\"submit\" value=\"Sign up\" />\n            </div>\n          </form>\n          <h1>{this.state.error ? \"Error\" : \"\"}</h1>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Signup;\n","import React, { Component } from \"react\";\nimport AuthService from \"./../services/Authservice\";\nimport \"./Login.css\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { email: \"\", password: \"\", oculto: true };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const email = this.state.email;\n    const password = this.state.password;\n\n    this.service\n      .login(email, password)\n      .then(response => {\n        this.setState({\n          email: email,\n          password: password,\n          error: false\n        });\n\n        this.props.getUser(response);\n      })\n      .catch(error => {\n        this.setState({\n          email: email,\n          password: password,\n          error: true\n        });\n      });\n  };\n  componentDidMount() {\n    let _this = this;\n    setTimeout(function() {\n      _this.setState({\n        ...this.state,\n        oculto: false\n      });\n    }, 10);\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    if (this.state.oculto === true) {\n      return (\n        <div className=\"container-login oculto-login\">\n          <form onSubmit={this.handleFormSubmit}>\n            <h3>Sign in!</h3>\n            <fieldset>\n              <label>\n                <i class=\"material-icons\">email</i>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  value={this.state.email}\n                  onChange={e => this.handleChange(e)}\n                  placeholder=\"Email\"\n                  required\n                />\n              </label>\n            </fieldset>\n\n            <fieldset>\n              <label>\n                <i class=\"material-icons\">lock</i>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  value={this.state.password}\n                  onChange={e => this.handleChange(e)}\n                  placeholder=\"********\"\n                  required\n                />\n              </label>\n            </fieldset>\n            <div className=\"fatherbtn\">\n              <input className=\"button\" type=\"submit\" value=\"Log in\" />\n            </div>\n          </form>\n          <h1>{this.state.error ? \"Error\" : \"\"}</h1>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"container-login oculto-login mostrar-login \">\n          <form onSubmit={this.handleFormSubmit}>\n            <h3>Sign in!</h3>\n            <fieldset>\n              <label>\n                <i class=\"material-icons\">email</i>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  value={this.state.email}\n                  onChange={e => this.handleChange(e)}\n                  placeholder=\"Email\"\n                  required\n                />\n              </label>\n            </fieldset>\n\n            <fieldset>\n              <label>\n                <i class=\"material-icons\">lock</i>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  value={this.state.password}\n                  onChange={e => this.handleChange(e)}\n                  placeholder=\"********\"\n                  required\n                />\n              </label>\n            </fieldset>\n            <div className=\"fatherbtn\">\n              <input className=\"button\" type=\"submit\" value=\"Log in\" />\n            </div>\n          </form>\n          <h1>{this.state.error ? \"Error\" : \"\"}</h1>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport \"./Marker.css\";\n\nconst Marker = (props: any) => {\n  const { color, name,} = props;\n  return (\n    <div>\n      <div\n        className=\"pin bounce\"\n        style={{ backgroundColor: color, cursor: 'pointer'}}\n        title={name}\n      />\n      <div className=\"pulse\" />\n    </div>\n  );\n};\n\nexport default Marker;\n","import React, { Component } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport Marker from \"./Marker.tsx\";\n\nimport \"./Gmaps.css\";\n\nclass SimpleMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      center: {\n        lng: this.props.coordinates[0],\n        lat: this.props.coordinates[1]\n      },\n      zoom: 10\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"map\">\n        <GoogleMapReact\n          bootstrapURLKeys={{\n            key: process.env.REACT_APP_API_KEY\n          }}\n          defaultCenter={this.state.center}\n          defaultZoom={this.state.zoom}\n        >\n          <Marker\n            lat={this.state.center.lat}\n            lng={this.state.center.lng}\n            name=\"My Marker\"\n            color=\"black\"\n          />\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n\nexport default SimpleMap;\n","import React, { Component } from \"react\";\nimport \"./OneSpot.scss\";\n\nexport default class OneSpot extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      spot: {}\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    state.spot = props.spot;\n  }\n\n  render() {\n    const { spot } = this.state;\n    return (\n      <div className=\"spot\" onClick={e => this.props.display(e)}>\n        <img src={spot.imageURL} alt=\"spot pic\" />\n        <div className=\"titlePhoto\">\n          <h2>\n            {spot.name} {\"\"}({spot.country})\n          </h2>\n          <p>\n            {spot.wave_direction} <br />\n            <i class=\"fas fa-long-arrow-alt-right\"></i>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n","import axios from \"axios\";\n\nclass SpotsService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api/spots`,\n      withCredentials: true\n    });\n  }\n\n  allSpots = () => {\n    return this.service.get(\"/\").then(response => {\n      return response.data;\n    });\n  };\n\n  createSpots = (\n    name,\n    location,\n    nearby,\n    rating,\n    text,\n    wave_form,\n    wave_direction,\n    country,\n    weather,\n    period,\n    break_type,\n    level,\n    desired_height,\n    vibe,\n    consistence,\n    imageURL\n  ) => {\n    return this.service\n      .post(\"/create\", {\n        name,\n        location,\n        nearby,\n        rating,\n        text,\n        wave_form,\n        wave_direction,\n        country,\n        weather,\n        period,\n        break_type,\n        level,\n        desired_height,\n        vibe,\n        consistence,\n        imageURL\n      })\n      .then(response => {\n        console.log(response.data);\n        return response.data;\n      });\n  };\n\n  addPicture = file => {\n    const formData = new FormData();\n    formData.append(\"photo\", file);\n\n    return this.service\n      .post(\"/create/photo\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      })\n      .then(res => res.data)\n      .catch(this.errHandler);\n  };\n\n  getForecast = () => {\n    return this.service.get(\"/getForecast\").then(response => response.data);\n  };\n}\nexport default SpotsService;\n","import React, { Component } from \"react\";\nimport \"./Preload.scss\";\nexport default class Preload extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <div class=\"lds-hourglass\"></div>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Spots.scss\";\nimport Gmaps from \"./../gmaps/Gmaps\";\nimport OneSpot from \"./OneSpot\";\nimport SpotsService from \"./../services/SpotsService\";\nimport Preload from \"../Preload/Preload\";\nimport SearchBar from \"../navbar/Searchbar\";\n\nexport default class Spots extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      spots: [],\n      selectedSpot: [],\n      showOneSpot: false,\n      forecast: {},\n      preload: false\n    };\n    this.service = new SpotsService();\n    this.preload();\n  }\n\n  displayOne(spot) {\n    this.setState(\n      {\n        ...this.state,\n        selectedSpot: spot,\n        showOneSpot: true\n      },\n      () => this.getForecast(this.state.selectedSpot)\n    );\n  }\n\n  preload() {\n    setTimeout(() => {\n      this.setState({ ...this.state, preload: true });\n    }, 4000);\n  }\n\n  hideOne(spot) {\n    this.setState({\n      ...this.state,\n      showOneSpot: false,\n      preload: false\n    });\n  }\n\n  getForecast(spot) {\n    const lng = spot.location.coordinates[0];\n    const lat = spot.location.coordinates[1];\n    fetch(`https://api.stormglass.io/v1/weather/point?lat=${lat}&lng=${lng}`, {\n      headers: {\n        Authorization: `${process.env.REACT_APP_API_KEY}`\n      }\n    })\n      .then(response => response.json())\n      .then(forecast => {\n        this.setState({\n          ...this.state,\n          forecast: forecast\n        });\n      });\n  }\n\n  render() {\n    if (!this.state.preload) {\n      this.preload();\n    }\n    if (this.state.forecast.hours) {\n    }\n    if (this.state.showOneSpot === false) {\n      return (\n        <div className=\"container-spot\">\n          <div className=\"one-spot\">\n            <div className=\"filter\"></div>\n            <div className=\"full-info\"></div>\n          </div>\n          <div className=\"masonry-effect\">\n            {this.props.spots.map((spot, index) => (\n              <div className=\"item\" onClick={() => this.displayOne(spot)}>\n                <OneSpot\n                  full={false}\n                  selectedSpot={this.state.selectedSpot}\n                  key={index}\n                  spot={spot}\n                  display={() => this.getForecast(spot)}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"container-spot\">\n          <div className=\"one-spot display\">\n            <div className=\"filter\"></div>\n            <div className=\"full-info\">\n              <div className=\"spot-info\">\n                <i\n                  className=\"material-icons back-spot\"\n                  onClick={() => this.hideOne()}\n                >\n                  arrow_back\n                </i>\n                <ul>\n                  <li className=\"center\">\n                    {this.state.selectedSpot.name} (\n                    {this.state.selectedSpot.country})\n                  </li>\n                </ul>\n                <img src={this.state.selectedSpot.imageURL} alt=\"spot-photo\" />\n                <h2>Spot info</h2>\n                <div className=\"topRow\">\n                  <span>\n                    {\" \"}\n                    {this.state.selectedSpot.nearby} Nearby{\" \"}\n                    <i class=\"fas fa-utensils\"></i>{\" \"}\n                  </span>\n\n                  <span>\n                    {this.state.selectedSpot.consistence}{\" \"}\n                    <i class=\"fas fa-check\"></i>\n                  </span>\n\n                  <span>\n                    {\" \"}\n                    {this.state.selectedSpot.comment.rating}\n                    <i class=\"fas fa-star\"></i>\n                  </span>\n                </div>\n                <div className=\"sRow\">\n                  <span>\n                    {this.state.selectedSpot.wave_form}\n                    <i class=\"fas fa-wind\"></i>\n                  </span>\n\n                  <span>\n                    {\" \"}\n                    {this.state.selectedSpot.wave_direction}{\" \"}\n                    <i class=\"fas fa-long-arrow-alt-right\"></i>\n                  </span>\n\n                  <span>\n                    {this.state.selectedSpot.weather} <i class=\"fas fa-sun\"></i>\n                  </span>\n                </div>\n                <div className=\"bRow\">\n                  <span>\n                    {\" \"}\n                    {this.state.selectedSpot.break_type}{\" \"}\n                    <i class=\"fas fa-water\"></i>\n                  </span>\n\n                  <span>\n                    {this.state.selectedSpot.level}{\" \"}\n                    <i class=\"fas fa-exclamation\"></i>\n                  </span>\n\n                  <span>\n                    {this.state.selectedSpot.vibe}{\" \"}\n                    <i class=\"fas fa-hand-spock\"></i>\n                  </span>\n                </div>\n                <div className=\"putoMap\">\n                  <Gmaps\n                    className=\"Gmaps\"\n                    coordinates={this.state.selectedSpot.location.coordinates}\n                  />\n                </div>\n                <div className=\"comment\">\n                  <h3>\"{this.state.selectedSpot.comment.text}\"</h3>\n                  <p>Posted by: \"Anonymous\"</p>\n                </div>\n              </div>\n              <span className=\"for\">\n                <h2>Today's forecast</h2>\n              </span>\n              <div className=\"forecast-info\">\n                <div className=\"Morning\">\n                  {this.state.preload ? (\n                    <React.Fragment>\n                      <div className=\"upRow\">\n                        <ul>\n                          {!!this.state.forecast.hours && (\n                            <li>\n                              <i class=\"material-icons\">brightness_7</i>\n                              {this.state.forecast.hours[4].airTemperature[0].value.toFixed()}{\" \"}\n                              -\n                              {this.state.forecast.hours[12].airTemperature[0].value.toFixed()}\n                              ºC\n                            </li>\n                          )}\n                        </ul>\n                        <p>Morning 05 - 11h</p>\n                        <ul>\n                          {!!this.state.forecast.hours && (\n                            <li>\n                              <i class=\"material-icons\">opacity</i>\n                              {this.state.forecast.hours[4].waterTemperature[0].value.toFixed()}{\" \"}\n                              -\n                              {this.state.forecast.hours[12].waterTemperature[0].value.toFixed()}\n                              ºC\n                            </li>\n                          )}\n                        </ul>\n                      </div>\n                      <div className=\"midRow\">\n                        <ul>\n                          {!!this.state.forecast.hours && (\n                            <li>\n                              <i class=\"fas fa-water\"></i>{\" \"}\n                              {this.state.forecast.hours[4].waveHeight[0].value.toFixed(\n                                1\n                              )}{\" \"}\n                              -{\" \"}\n                              {this.state.forecast.hours[12].waveHeight[0].value.toFixed(\n                                1\n                              )}{\" \"}\n                              m\n                            </li>\n                          )}\n                        </ul>\n                      </div>\n                      <div className=\"downRow\">\n                        <ul>\n                          {!!this.state.forecast.hours && (\n                            <li>\n                              <i class=\"material-icons\"> autorenew</i>\n                              {this.state.forecast.hours[4].wavePeriod[0].value.toFixed()}{\" \"}\n                              -\n                              {this.state.forecast.hours[12].wavePeriod[0].value.toFixed()}{\" \"}\n                              s\n                            </li>\n                          )}\n                        </ul>\n                        <ul>\n                          {!!this.state.forecast.hours && (\n                            <li>\n                              <i class=\"material-icons\"> arrow_upward</i>\n                              {this.state.forecast.hours[4].windSpeed[0].value.toFixed()}{\" \"}\n                              -\n                              {this.state.forecast.hours[12].windSpeed[0].value.toFixed()}{\" \"}\n                              kph\n                            </li>\n                          )}\n                        </ul>\n                      </div>\n                    </React.Fragment>\n                  ) : (\n                    <Preload />\n                  )}\n                </div>\n                <div className=\"Midday\">\n                  {this.state.preload ? (\n                    <React.Fragment>\n                      <div className=\"upRow\">\n                        <ul>\n                          {!!this.state.forecast.hours && (\n                            <li>\n                              <i class=\"material-icons\">brightness_7</i>\n                              {this.state.forecast.hours[12].airTemperature[0].value.toFixed()}{\" \"}\n                              -\n                              {this.state.forecast.hours[18].airTemperature[0].value.toFixed()}\n                              ºC\n                            </li>\n                          )}\n                        </ul>\n\n                        <p>Midday 11 - 17h</p>\n\n                        <ul>\n                          {!!this.state.forecast.hours && (\n                            <li>\n                              <i class=\"material-icons\">opacity</i>\n                              {this.state.forecast.hours[12].waterTemperature[0].value.toFixed()}{\" \"}\n                              -\n                              {this.state.forecast.hours[18].waterTemperature[0].value.toFixed()}\n                              ºC\n                            </li>\n                          )}\n                        </ul>\n                      </div>\n                      <div className=\"midRow\">\n                        <ul>\n                          {!!this.state.forecast.hours && (\n                            <li>\n                              <i class=\"fas fa-water\"></i>{\" \"}\n                              {this.state.forecast.hours[12].waveHeight[0].value.toFixed(\n                                1\n                              )}{\" \"}\n                              -{\" \"}\n                              {this.state.forecast.hours[18].waveHeight[0].value.toFixed(\n                                1\n                              )}{\" \"}\n                              m\n                            </li>\n                          )}\n                        </ul>\n                      </div>\n                      <div className=\"downRow\">\n                        <ul>\n                          {!!this.state.forecast.hours && (\n                            <li>\n                              <i class=\"material-icons\"> autorenew</i>\n                              {this.state.forecast.hours[12].wavePeriod[0].value.toFixed()}{\" \"}\n                              -\n                              {this.state.forecast.hours[18].wavePeriod[0].value.toFixed()}{\" \"}\n                              s\n                            </li>\n                          )}\n                        </ul>\n                        <ul>\n                          {!!this.state.forecast.hours && (\n                            <li>\n                              <i class=\"material-icons\"> arrow_upward</i>\n                              {this.state.forecast.hours[12].windSpeed[0].value.toFixed()}{\" \"}\n                              -\n                              {this.state.forecast.hours[18].windSpeed[0].value.toFixed()}{\" \"}\n                              kph\n                            </li>\n                          )}\n                        </ul>\n                      </div>\n                    </React.Fragment>\n                  ) : (\n                    <Preload />\n                  )}\n                </div>\n                <div className=\"Evening\">\n                  {this.state.preload ? (\n                    <React.Fragment>\n                      <div className=\"upRow\">\n                        <ul>\n                          {!!this.state.forecast.hours && (\n                            <li>\n                              <i class=\"material-icons\">brightness_7</i>\n                              {this.state.forecast.hours[18].airTemperature[0].value.toFixed()}{\" \"}\n                              -\n                              {this.state.forecast.hours[24].airTemperature[0].value.toFixed()}\n                              ºC\n                            </li>\n                          )}\n                        </ul>\n                        <p>Evening 17 - 23h</p>\n\n                        <ul>\n                          {!!this.state.forecast.hours && (\n                            <li>\n                              <i class=\"material-icons\">opacity</i>\n                              {this.state.forecast.hours[18].waterTemperature[0].value.toFixed()}{\" \"}\n                              -\n                              {this.state.forecast.hours[24].waterTemperature[0].value.toFixed()}\n                              ºC\n                            </li>\n                          )}\n                        </ul>\n                      </div>\n                      <div className=\"midRow\">\n                        <ul>\n                          {!!this.state.forecast.hours && (\n                            <li>\n                              <i class=\"fas fa-water\"></i>{\" \"}\n                              {this.state.forecast.hours[18].waveHeight[0].value.toFixed(\n                                1\n                              )}{\" \"}\n                              -{\" \"}\n                              {this.state.forecast.hours[24].waveHeight[0].value.toFixed(\n                                1\n                              )}{\" \"}\n                              m\n                            </li>\n                          )}\n                        </ul>\n                      </div>\n                      <div className=\"downRow\">\n                        <ul>\n                          {!!this.state.forecast.hours && (\n                            <li>\n                              <i class=\"material-icons\"> autorenew</i>\n                              {this.state.forecast.hours[18].wavePeriod[0].value.toFixed()}{\" \"}\n                              -\n                              {this.state.forecast.hours[24].wavePeriod[0].value.toFixed()}{\" \"}\n                              s\n                            </li>\n                          )}\n                        </ul>\n                        <ul>\n                          {!!this.state.forecast.hours && (\n                            <li>\n                              <i class=\"material-icons\"> arrow_upward</i>\n                              {this.state.forecast.hours[18].windSpeed[0].value.toFixed()}{\" \"}\n                              -\n                              {this.state.forecast.hours[24].windSpeed[0].value.toFixed()}{\" \"}\n                              kph\n                            </li>\n                          )}\n                        </ul>\n                      </div>\n                    </React.Fragment>\n                  ) : (\n                    <Preload />\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n          {this.props.spots.map((spot, index) => (\n            <React.Fragment>\n              <OneSpot key={index} spot={spot} />\n            </React.Fragment>\n          ))}\n        </div>\n      );\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng\n} from \"react-places-autocomplete\";\n\nexport default class LocationSearchInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { address: \"\" };\n  }\n\n  handleChange = address => {\n    this.setState({ address });\n  };\n\n  handleSelect = address => {\n    geocodeByAddress(address)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => this.props.getCoordinates(latLng))\n      .catch(error => console.error(\"Error\", error));\n      \n  };\n\n  render() {\n    \n    return (\n      <PlacesAutocomplete\n        value={this.state.address}\n        onChange={this.handleChange}\n        onSelect={this.handleSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <div>\n            <input\n              {...getInputProps({\n                placeholder: \"Search Places ...\",\n                className: \"location-search-input\"\n              })}\n            />\n            <div className=\"autocomplete-dropdown-container\">\n              {loading && <div>Loading...</div>}\n              {suggestions.map(suggestion => {\n                const className = suggestion.active\n                  ? \"suggestion-item--active\"\n                  : \"suggestion-item\";\n                // inline style for demonstration purpose\n                const style = suggestion.active\n                  ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\n                  : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n                return (\n                  <div\n                    {...getSuggestionItemProps(suggestion, {\n                      className,\n                      style\n                    })}\n                  >\n                    <span>{suggestion.description}</span>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </PlacesAutocomplete>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport Marker from \"./Marker.tsx\";\nimport LocationSearchInput from \"./LocationSearchInput\";\nimport \"./GmapsLocate.css\";\n\nimport \"./Gmaps.css\";\n\nclass SimpleMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      lng: this.props.coordinates[0],\n      lat: this.props.coordinates[1],\n      zoom: 9\n    };\n  }\n\n  getCoordinates(lnglat) {\n    this.setState(\n      {\n        ...this.state,\n        lng: lnglat.lng,\n        lat: lnglat.lat\n      },\n      () => {\n        this.props.getLocation(lnglat);\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"map\">\n        <LocationSearchInput\n          className=\"location-search-input\"\n          getCoordinates={lnglat => this.getCoordinates(lnglat)}\n        />\n        <GoogleMapReact\n          bootstrapURLKeys={{\n            key:\n              \"https://maps.googleapis.com/maps/api/js?v=3.exp&key=AIzaSyDUeQXCyJDlhOtCB8JwWAk8zCxpjk6k-jo&libraries=places\"\n          }}\n          center={this.state}\n          defaultZoom={this.state.zoom}\n        >\n          <Marker\n            lat={this.state.lng}\n            lng={this.state.lat}\n            name=\"My Marker\"\n            color=\"black\"\n          />\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n\nexport default SimpleMap;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./Create.scss\";\nimport SpotsService from \"./../services/SpotsService\";\nimport GmapsLocate from \"./../gmaps/GmapsLocate\";\n\nclass Create extends Component {\n                 constructor() {\n                   super();\n\n                   this.state = {\n                     coordinates: [115.838236, -8.739984],\n                     name: \"\",\n                     location: \"\",\n                     image: \"\",\n                     nearby: \"\",\n                     rating: \"\",\n                     text: \"\",\n                     wave_form: \"\",\n                     wave_direction: \"\",\n                     country: \"\",\n                     weather: \"\",\n                     period: \"\",\n                     break_type: \"\",\n                     level: \"\",\n                     vibe: \"\",\n                     consistence: \"\",\n                     imageURL: \"\",\n                     oculto: true\n                   };\n\n                   this.service = new SpotsService();\n                 }\n\n                 getLocation = lnglat => {\n                   const loct = {\n                     coordinates: [lnglat.lng, lnglat.lat],\n                     type: \"Point\"\n                   };\n                   this.setState({\n                     ...this.state,\n                     location: loct\n                   });\n                 };\n\n                 handleFormSubmit = event => {\n                   event.preventDefault();\n\n                   const name = this.state.name;\n                   const location = this.state.location;\n                   const nearby = this.state.nearby;\n                   const rating = this.state.rating;\n                   const text = this.state.text;\n                   const wave_form = this.state.wave_form;\n                   const wave_direction = this.state.wave_direction;\n                   const country = this.state.country;\n                   const weather = this.state.weather;\n                   const period = this.state.period;\n                   const break_type = this.state.break_type;\n                   const level = this.state.level;\n                   const desired_height = this.desired_height;\n                   const vibe = this.state.vibe;\n                   const consistence = this.state.consistence;\n                   const imageURL = this.state.imageURL;\n\n                   this.props.createSpots(\n                     name,\n                     location,\n                     nearby,\n                     rating,\n                     text,\n                     wave_form,\n                     wave_direction,\n                     country,\n                     weather,\n                     period,\n                     break_type,\n                     level,\n                     desired_height,\n                     vibe,\n                     consistence,\n                     imageURL,\n                     () => {\n                     this.props.getAllSpotsFn(() => {\n                       this.props.history.push(\"/spots\");\n                     })}\n                   );\n\n                   this.setState({\n                     name: \"\",\n                     location: \"\",\n                     image: \"\",\n                     nearby: \"\",\n                     rating: \"\",\n                     text: \"\",\n                     wave_form: \"\",\n                     wave_direction: \"\",\n                     country: \"\",\n                     weather: \"\",\n                     period: \"\",\n                     break_type: \"\",\n                     level: \"\",\n                     desired_height: \"\",\n                     vibe: \"\",\n                     consistence: \"\",\n                     imageURL: \"\",\n                   });\n                 };\n\n                 handleChange = event => {\n                   const { name, value } = event.target;\n                   this.setState({ [name]: value });\n                 };\n                  componentDidMount() {\n                    let _this = this;\n                    setTimeout(function() {\n                      _this.setState({\n                        ...this.state,\n                        oculto: false\n                      });\n                    },10);\n                  }\n                \n                  out(){\n                    this.setState({\n                      ...this.state,\n                      oculto: false\n                    });\n                  }\n\n                 onPhotoChange(image) {\n                   const filename = image.target.value;\n\n                   this.setState({\n                     ...this.state,\n                     image: image.target.files[0]\n                   });\n                 }\n\n                 upload() {\n                   this.service.addPicture(this.state.image).then(imageURL => {\n                     this.setState({\n                       ...this.state,\n                       imageURL: imageURL\n                     });\n                   });\n                 }\n\n                 render() {\n                   if (this.state.oculto === true) {\n                     return (\n                       <div className=\"container oculto-create mostrar-create\">\n                         <div className=\"full oculto-create \">\n                           <i\n                             className=\"material-icons back\"\n                             onClick={() => this.props.history.push(\"/\")}\n                           >\n                             arrow_back\n                           </i>\n                           <div className=\"left\">\n                             <div className=\"cloudinary\">\n                               {this.state.imageURL && (\n                                 <img src={this.state.imageURL} />\n                               )}\n\n                               <div className=\"upload\">\n                                 <i\n                                   class=\"fas fa-cloud-upload-alt\"\n                                   onClick={() => this.upload()}\n                                 ></i>\n                               </div>\n                               <div className=\"align\">\n                                 <input\n                                   className=\"ok\"\n                                   type=\"file\"\n                                   name=\"photo\"\n                                   onChange={e => this.onPhotoChange(e)}\n                                 />\n                               </div>\n                             </div>\n                             <GmapsLocate\n                               className=\"map\"\n                               coordinates={this.state.coordinates}\n                               getLocation={this.getLocation}\n                             />\n                           </div>\n\n                           <form\n                             onSubmit={event =>\n                               this.handleFormSubmit(event, \"image\")\n                             }\n                           >\n                             <div className=\"icons\">\n                               <div className=\"firstRow\">\n                                 <fieldset>\n                                   <label>Spot name</label>\n                                   <input\n                                     type=\"text\"\n                                     name=\"name\"\n                                     value={this.state.name}\n                                     placeholder=\"Name...\"\n                                     required\n                                     onChange={event =>\n                                       this.handleChange(event)\n                                     }\n                                   />\n                                 </fieldset>\n                                 <fieldset>\n                                   <label> Country</label>\n                                   <input\n                                     type=\"text\"\n                                     name=\"country\"\n                                     value={this.state.country}\n                                     onChange={event =>\n                                       this.handleChange(event)\n                                     }\n                                     placeholder=\"Country...\"\n                                     required\n                                   />\n                                 </fieldset>\n                                 <fieldset>\n                                   <label> Near? </label>\n                                   <input\n                                     type=\"text\"\n                                     name=\"nearby\"\n                                     value={this.state.nearby}\n                                     onChange={event =>\n                                       this.handleChange(event)\n                                     }\n                                     placeholder=\"Nearby...\"\n                                     required\n                                   />\n                                 </fieldset>\n                               </div>\n                               <div className=\"secRow\">\n                                 <label>\n                                   <label> Consistence </label>\n                                   <select\n                                     defaultValue=\"Select consistence\"\n                                     name=\"consistence\"\n                                     onChange={event =>\n                                       this.handleChange(event)\n                                     }\n                                   >\n                                     <option\n                                       value=\"\"\n                                       selected={this.state.consistence === \"\"}\n                                     >\n                                       Select consistence\n                                     </option>\n\n                                     <option\n                                       value=\"Yes\"\n                                       selected={\n                                         this.state.consistence === \"Yes\"\n                                       }\n                                     >\n                                       Yes\n                                     </option>\n                                     <option\n                                       value=\"No\"\n                                       selected={\n                                         this.state.consistence === \"No\"\n                                       }\n                                     >\n                                       No\n                                     </option>\n                                   </select>\n                                 </label>\n                                 <label>\n                                   <label>Wave form</label>\n                                   <select\n                                     defaultValue=\"Select wave form\"\n                                     onChange={event =>\n                                       this.handleChange(event)\n                                     }\n                                     name=\"wave_form\"\n                                   >\n                                     <option\n                                       value=\"\"\n                                       selected={this.state.wave_form === \"\"}\n                                     >\n                                       Select wave form\n                                     </option>\n                                     <option\n                                       value=\"Fat\"\n                                       selected={this.state.wave_form === \"Fat\"}\n                                     >\n                                       Fat\n                                     </option>\n                                     <option\n                                       value=\"Hollow\"\n                                       selected={\n                                         this.state.wave_form === \"Hollow\"\n                                       }\n                                     >\n                                       Hollow\n                                     </option>\n                                   </select>\n                                 </label>\n                                 <label>\n                                   <label>Direction </label>\n                                   <select\n                                     defaultValue=\"Select wave direction\"\n                                     onChange={event =>\n                                       this.handleChange(event)\n                                     }\n                                     name=\"wave_direction\"\n                                   >\n                                     {\" \"}\n                                     <option\n                                       value=\"\"\n                                       selected={\n                                         this.state.wave_direction === \"\"\n                                       }\n                                     >\n                                       Select wave direction\n                                     </option>\n                                     <option\n                                       value=\"Left\"\n                                       selected={\n                                         this.state.wave_direction === \"Left\"\n                                       }\n                                     >\n                                       Left\n                                     </option>\n                                     <option\n                                       value=\"A-Frame\"\n                                       selected={\n                                         this.state.wave_direction === \"A-Frame\"\n                                       }\n                                     >\n                                       A-Frame\n                                     </option>\n                                     <option\n                                       value=\"Right\"\n                                       selected={\n                                         this.state.wave_direction === \"Right\"\n                                       }\n                                     >\n                                       Right\n                                     </option>\n                                   </select>\n                                 </label>\n                                 <label>\n                                   <label> Weather </label>\n                                   <select\n                                     defaultValue=\"Select weather\"\n                                     onChange={event =>\n                                       this.handleChange(event)\n                                     }\n                                     name=\"weather\"\n                                   >\n                                     <option\n                                       value=\"\"\n                                       selected={this.state.weather === \"\"}\n                                     >\n                                       Select weather\n                                     </option>\n                                     <option\n                                       value=\"Cold\"\n                                       selected={this.state.weather === \"Cold\"}\n                                     >\n                                       Cold\n                                     </option>\n                                     <option\n                                       value=\"Mild\"\n                                       selected={this.state.weather === \"Mild\"}\n                                     >\n                                       Mild\n                                     </option>\n                                     <option\n                                       value=\"Hot\"\n                                       selected={this.state.weather === \"Hot\"}\n                                     >\n                                       Hot\n                                     </option>\n                                   </select>\n                                 </label>\n                               </div>\n                               <div className=\"thirdRow\">\n                                 <label>\n                                   <label> Break </label>\n                                   <select\n                                     defaultValue=\"Select break type\"\n                                     onChange={event =>\n                                       this.handleChange(event)\n                                     }\n                                     name=\"break_type\"\n                                   >\n                                     <option\n                                       value=\"\"\n                                       selected={this.state.break_type === \"\"}\n                                     >\n                                       Select Break type\n                                     </option>\n                                     <option\n                                       value=\"Beach break\"\n                                       selected={\n                                         this.state.break_type === \"Beach break\"\n                                       }\n                                     >\n                                       Beach break\n                                     </option>\n                                     <option\n                                       value=\"Point break\"\n                                       selected={\n                                         this.state.break_type === \"Point break\"\n                                       }\n                                     >\n                                       Point break\n                                     </option>\n                                     <option\n                                       value=\"Reef break\"\n                                       selected={\n                                         this.state.break_type === \"Reef break\"\n                                       }\n                                     >\n                                       Reef break\n                                     </option>\n                                     <option\n                                       value=\"Rivermouth break\"\n                                       selected={\n                                         this.state.break_type ===\n                                         \"Rivermouth break\"\n                                       }\n                                     >\n                                       Rivermouth break\n                                     </option>\n                                   </select>\n                                 </label>\n\n                                 <label>\n                                   <label>Level </label>\n                                   <select\n                                     defaultValue=\"Select level\"\n                                     onChange={event =>\n                                       this.handleChange(event)\n                                     }\n                                     name=\"level\"\n                                   >\n                                     <option\n                                       value=\"\"\n                                       selected={this.state.level === \"\"}\n                                     >\n                                       Select level\n                                     </option>\n                                     <option\n                                       value=\"Beginner\"\n                                       selected={\n                                         this.state.level === \"Beginner\"\n                                       }\n                                     >\n                                       Beginner\n                                     </option>\n                                     <option\n                                       value=\"Intermediate\"\n                                       selected={\n                                         this.state.level === \"Intermediate\"\n                                       }\n                                     >\n                                       Intermediate\n                                     </option>\n                                     <option\n                                       value=\"Advanced\"\n                                       selected={\n                                         this.state.level === \"Advanced\"\n                                       }\n                                     >\n                                       Advanced\n                                     </option>\n                                   </select>\n                                 </label>\n                                 <label>\n                                   <label> Vibe? </label>\n                                   <select\n                                     defaultValue=\"Select vibe\"\n                                     onChange={event =>\n                                       this.handleChange(event)\n                                     }\n                                     name=\"vibe\"\n                                   >\n                                     <option\n                                       value=\"\"\n                                       selected={this.state.vibe === \"\"}\n                                     >\n                                       Select vibe\n                                     </option>\n                                     <option\n                                       value=\"Friendly\"\n                                       selected={this.state.vibe === \"Friendly\"}\n                                     >\n                                       Friendly\n                                     </option>\n                                     <option\n                                       value=\"Unfriendly\"\n                                       selected={\n                                         this.state.vibe === \"Unfriendly\"\n                                       }\n                                     >\n                                       Unfriendly\n                                     </option>\n                                   </select>\n                                 </label>\n                                 <label>\n                                   <label>Rate it!</label>\n                                   <select\n                                     defaultValue=\"Rate it!\"\n                                     onChange={event =>\n                                       this.handleChange(event)\n                                     }\n                                     name=\"rating\"\n                                   >\n                                     <option\n                                       value=\"\"\n                                       selected={this.state.rating === \"\"}\n                                     >\n                                       Rate\n                                     </option>\n                                     <option\n                                       value=\"1\"\n                                       selected={this.state.rating === \"1\"}\n                                     >\n                                       1\n                                     </option>\n                                     <option\n                                       value=\"2\"\n                                       selected={this.state.rating === \"2\"}\n                                     >\n                                       2\n                                     </option>\n                                     <option\n                                       value=\"3\"\n                                       selected={this.state.rating === \"3\"}\n                                     >\n                                       3\n                                     </option>\n                                     <option\n                                       value=\"4\"\n                                       selected={this.state.rating === \"4\"}\n                                     >\n                                       4\n                                     </option>\n                                     <option\n                                       value=\"5\"\n                                       selected={this.state.rating === \"5\"}\n                                     >\n                                       5\n                                     </option>\n                                   </select>\n                                 </label>\n                               </div>\n                               <div className=\"comment\">\n                                 <fieldset>\n                                   <textarea\n                                     type=\"text\"\n                                     name=\"text\"\n                                     value={this.state.text}\n                                     onChange={event =>\n                                       this.handleChange(event)\n                                     }\n                                     placeholder=\"Your comment here....\"\n                                     required\n                                   />\n                                 </fieldset>\n                               </div>\n                               <input\n                                 className=\"submit-button\"\n                                 type=\"button\"\n                                 value=\"Create spot!\"\n                                 onClick={e => this.handleFormSubmit(e)}\n                               />\n                             </div>\n                           </form>\n                         </div>\n                       </div>\n                     );\n                   } else {\n                     return (\n                       <div className=\"container oculto-create mostrar-create\">\n                         <div className=\"full oculto-create mostrar-create \">\n                           <div className=\"todo\">\n                             <i\n                               className=\"material-icons back\"\n                               onClick={() => this.props.history.push(\"/spots\")}\n                             >\n                               arrow_back\n                             </i>\n                             <h1>Post your Spot!</h1>\n                             <h2>1) Locate it</h2>\n                             <GmapsLocate\n                               className=\"map\"\n                               coordinates={this.state.coordinates}\n                               getLocation={this.getLocation}\n                             />\n                             <h2>2) Info</h2>\n                             <form\n                               onSubmit={event =>\n                                 this.handleFormSubmit(event, \"image\")\n                               }\n                             >\n                               <div className=\"firstRow\">\n                                 <fieldset>\n                                   <label>Spot name</label>\n                                   <input\n                                     type=\"text\"\n                                     name=\"name\"\n                                     value={this.state.name}\n                                     placeholder=\"Name...\"\n                                     required\n                                     onChange={event =>\n                                       this.handleChange(event)\n                                     }\n                                   />\n                                 </fieldset>\n                                 <fieldset>\n                                   <label> Country</label>\n                                   <input\n                                     type=\"text\"\n                                     name=\"country\"\n                                     value={this.state.country}\n                                     onChange={event =>\n                                       this.handleChange(event)\n                                     }\n                                     placeholder=\"Country...\"\n                                     required\n                                   />\n                                 </fieldset>\n                                 <fieldset>\n                                   <label> What's Near? </label>\n                                   <input\n                                     type=\"text\"\n                                     name=\"nearby\"\n                                     value={this.state.nearby}\n                                     onChange={event =>\n                                       this.handleChange(event)\n                                     }\n                                     placeholder=\"Nearby...\"\n                                     required\n                                   />\n                                 </fieldset>\n                               </div>\n                               <div className=\"secRow\">\n                                 <label>\n                                   <label> Consistence </label>\n                                   <select\n                                     defaultValue=\"Select consistence\"\n                                     name=\"consistence\"\n                                     onChange={event =>\n                                       this.handleChange(event)\n                                     }\n                                   >\n                                     <option\n                                       value=\"\"\n                                       selected={this.state.consistence === \"\"}\n                                     >\n                                       Select consistence\n                                     </option>\n\n                                     <option\n                                       value=\"Yes\"\n                                       selected={\n                                         this.state.consistence === \"Yes\"\n                                       }\n                                     >\n                                       Yes\n                                     </option>\n                                     <option\n                                       value=\"No\"\n                                       selected={\n                                         this.state.consistence === \"No\"\n                                       }\n                                     >\n                                       No\n                                     </option>\n                                   </select>\n                                 </label>\n                                 <label>\n                                   <label>Wave form</label>\n                                   <select\n                                     defaultValue=\"Select wave form\"\n                                     onChange={event =>\n                                       this.handleChange(event)\n                                     }\n                                     name=\"wave_form\"\n                                   >\n                                     <option\n                                       value=\"\"\n                                       selected={this.state.wave_form === \"\"}\n                                     >\n                                       Select wave form\n                                     </option>\n                                     <option\n                                       value=\"Fat\"\n                                       selected={this.state.wave_form === \"Fat\"}\n                                     >\n                                       Fat\n                                     </option>\n                                     <option\n                                       value=\"Hollow\"\n                                       selected={\n                                         this.state.wave_form === \"Hollow\"\n                                       }\n                                     >\n                                       Hollow\n                                     </option>\n                                   </select>\n                                 </label>\n                                 <label>\n                                   <label>Wave Direction </label>\n                                   <select\n                                     defaultValue=\"Select wave direction\"\n                                     onChange={event =>\n                                       this.handleChange(event)\n                                     }\n                                     name=\"wave_direction\"\n                                   >\n                                     {\" \"}\n                                     <option\n                                       value=\"\"\n                                       selected={\n                                         this.state.wave_direction === \"\"\n                                       }\n                                     >\n                                       Select wave direction\n                                     </option>\n                                     <option\n                                       value=\"Left\"\n                                       selected={\n                                         this.state.wave_direction === \"Left\"\n                                       }\n                                     >\n                                       Left\n                                     </option>\n                                     <option\n                                       value=\"A-Frame\"\n                                       selected={\n                                         this.state.wave_direction === \"A-Frame\"\n                                       }\n                                     >\n                                       A-Frame\n                                     </option>\n                                     <option\n                                       value=\"Right\"\n                                       selected={\n                                         this.state.wave_direction === \"Right\"\n                                       }\n                                     >\n                                       Right\n                                     </option>\n                                   </select>\n                                 </label>\n                                 <label>\n                                   <label> Weather </label>\n                                   <select\n                                     defaultValue=\"Select weather\"\n                                     onChange={event =>\n                                       this.handleChange(event)\n                                     }\n                                     name=\"weather\"\n                                   >\n                                     <option\n                                       value=\"\"\n                                       selected={this.state.weather === \"\"}\n                                     >\n                                       Select weather\n                                     </option>\n                                     <option\n                                       value=\"Cold\"\n                                       selected={this.state.weather === \"Cold\"}\n                                     >\n                                       Cold\n                                     </option>\n                                     <option\n                                       value=\"Mild\"\n                                       selected={this.state.weather === \"Mild\"}\n                                     >\n                                       Mild\n                                     </option>\n                                     <option\n                                       value=\"Hot\"\n                                       selected={this.state.weather === \"Hot\"}\n                                     >\n                                       Hot\n                                     </option>\n                                   </select>\n                                 </label>\n                               </div>\n                               <div className=\"thirdRow\">\n                                 <label>\n                                   <label> Break </label>\n                                   <select\n                                     defaultValue=\"Select break type\"\n                                     onChange={event =>\n                                       this.handleChange(event)\n                                     }\n                                     name=\"break_type\"\n                                   >\n                                     <option\n                                       value=\"\"\n                                       selected={this.state.break_type === \"\"}\n                                     >\n                                       Select Break type\n                                     </option>\n                                     <option\n                                       value=\"Beach break\"\n                                       selected={\n                                         this.state.break_type === \"Beach break\"\n                                       }\n                                     >\n                                       Beach break\n                                     </option>\n                                     <option\n                                       value=\"Point break\"\n                                       selected={\n                                         this.state.break_type === \"Point break\"\n                                       }\n                                     >\n                                       Point break\n                                     </option>\n                                     <option\n                                       value=\"Reef break\"\n                                       selected={\n                                         this.state.break_type === \"Reef break\"\n                                       }\n                                     >\n                                       Reef break\n                                     </option>\n                                     <option\n                                       value=\"Rivermouth break\"\n                                       selected={\n                                         this.state.break_type ===\n                                         \"Rivermouth break\"\n                                       }\n                                     >\n                                       Rivermouth break\n                                     </option>\n                                   </select>\n                                 </label>\n\n                                 <label>\n                                   <label>Level </label>\n                                   <select\n                                     defaultValue=\"Select level\"\n                                     onChange={event =>\n                                       this.handleChange(event)\n                                     }\n                                     name=\"level\"\n                                   >\n                                     <option\n                                       value=\"\"\n                                       selected={this.state.level === \"\"}\n                                     >\n                                       Select level\n                                     </option>\n                                     <option\n                                       value=\"Beginner\"\n                                       selected={\n                                         this.state.level === \"Beginner\"\n                                       }\n                                     >\n                                       Beginner\n                                     </option>\n                                     <option\n                                       value=\"Intermediate\"\n                                       selected={\n                                         this.state.level === \"Intermediate\"\n                                       }\n                                     >\n                                       Intermediate\n                                     </option>\n                                     <option\n                                       value=\"Advanced\"\n                                       selected={\n                                         this.state.level === \"Advanced\"\n                                       }\n                                     >\n                                       Advanced\n                                     </option>\n                                   </select>\n                                 </label>\n                                 <label>\n                                   <label> Vibe? </label>\n                                   <select\n                                     defaultValue=\"Select vibe\"\n                                     onChange={event =>\n                                       this.handleChange(event)\n                                     }\n                                     name=\"vibe\"\n                                   >\n                                     <option\n                                       value=\"\"\n                                       selected={this.state.vibe === \"\"}\n                                     >\n                                       Select vibe\n                                     </option>\n                                     <option\n                                       value=\"Friendly\"\n                                       selected={this.state.vibe === \"Friendly\"}\n                                     >\n                                       Friendly\n                                     </option>\n                                     <option\n                                       value=\"Unfriendly\"\n                                       selected={\n                                         this.state.vibe === \"Unfriendly\"\n                                       }\n                                     >\n                                       Unfriendly\n                                     </option>\n                                   </select>\n                                 </label>\n                                 <label>\n                                   <label>Rate it!</label>\n                                   <select\n                                     defaultValue=\"Rate it!\"\n                                     onChange={event =>\n                                       this.handleChange(event)\n                                     }\n                                     name=\"rating\"\n                                   >\n                                     <option\n                                       value=\"\"\n                                       selected={this.state.rating === \"\"}\n                                     >\n                                       Rate\n                                     </option>\n                                     <option\n                                       value=\"1\"\n                                       selected={this.state.rating === \"1\"}\n                                     >\n                                       1\n                                     </option>\n                                     <option\n                                       value=\"2\"\n                                       selected={this.state.rating === \"2\"}\n                                     >\n                                       2\n                                     </option>\n                                     <option\n                                       value=\"3\"\n                                       selected={this.state.rating === \"3\"}\n                                     >\n                                       3\n                                     </option>\n                                     <option\n                                       value=\"4\"\n                                       selected={this.state.rating === \"4\"}\n                                     >\n                                       4\n                                     </option>\n                                     <option\n                                       value=\"5\"\n                                       selected={this.state.rating === \"5\"}\n                                     >\n                                       5\n                                     </option>\n                                   </select>\n                                 </label>\n                               </div>\n                               <fieldset className=\"cabron\">\n                                 <textarea\n                                   type=\"text\"\n                                   name=\"text\"\n                                   value={this.state.text}\n                                   onChange={event => this.handleChange(event)}\n                                   placeholder=\"Your comment here....\"\n                                   required\n                                 />\n                               </fieldset>\n                             </form>\n                             <h2>3) Upload photo </h2>\n                             <p>\n                               (Choose file and click the cloud to upload it)\n                             </p>\n                             <div className=\"cloudinary\">\n                               {this.state.imageURL && (\n                                 <img src={this.state.imageURL} />\n                               )}\n\n                               <div className=\"upload\">\n                                 <i\n                                   class=\"fas fa-cloud-upload-alt\"\n                                   onClick={() => this.upload()}\n                                 ></i>\n                               </div>\n                               <div className=\"align\">\n                                 <input\n                                   className=\"ok\"\n                                   type=\"file\"\n                                   name=\"photo\"\n                                   onChange={e => this.onPhotoChange(e)}\n                                 />\n                               </div>\n                             </div>\n                             <input\n                               className=\"submit-button\"\n                               type=\"button\"\n                               value=\"Create spot!\"\n                               onClick={e => this.handleFormSubmit(e)}\n                             />\n                           </div>\n                         </div>\n                       </div>\n                     );\n                   }\n                 }\n               }\n\n\n               export default withRouter(Create);","import React, { Component } from \"react\";\nimport Create from \"./create/Create\";\nimport Spots from \"./spots/Spots\";\nimport SpotsService from \"./services/SpotsService\";\nimport SearchBar from \"./navbar/Searchbar\";\nexport default class SpotCreation extends Component {\n  constructor() {\n    super();\n    this.state = {\n      spots: []\n    };\n    this.spServices = new SpotsService();\n  }\n\n  componentDidMount() {\n    this.spServices.allSpots().then(data => {\n      this.setState({ ...this.state, spots: data.spots });\n    });\n  }\n\n  createNewSpot(\n    name,\n    location,\n    nearby,\n    rating,\n    text,\n    wave_form,\n    wave_direction,\n    country,\n    weather,\n    period,\n    break_type,\n    level,\n    desired_height,\n    vibe,\n    consistence,\n    imageURL,\n    cb\n  ) {\n    this.spServices\n      .createSpots(\n        name,\n        location,\n        nearby,\n        rating,\n        text,\n        wave_form,\n        wave_direction,\n        country,\n        weather,\n        period,\n        break_type,\n        level,\n        desired_height,\n        vibe,\n        consistence,\n        imageURL\n      )\n\n      .then(response => {\n        this.setState(\n          {\n            ...this.state,\n            spots: response.allSpots\n          },\n          () => {\n            if (cb) cb();\n          }\n        );\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <Create\n          getAllSpotsFn={this.props.getAllSpotsFn}\n          createSpots={(\n            name,\n            location,\n            nearby,\n            rating,\n            text,\n            wave_form,\n            wave_direction,\n            country,\n            weather,\n            period,\n            break_type,\n            level,\n            desired_height,\n            vibe,\n            consistence,\n            imageURL,\n            cb\n          ) =>\n            this.createNewSpot(\n              name,\n              location,\n              nearby,\n              rating,\n              text,\n              wave_form,\n              wave_direction,\n              country,\n              weather,\n              period,\n              break_type,\n              level,\n              desired_height,\n              vibe,\n              consistence,\n              imageURL,\n              cb\n            )\n          }\n        />\n        <SearchBar className=\"search-bar\" />\n\n        <Spots spots={this.state.spots} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Home.scss\";\n// import Spots from \"../spots/Spots\";\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div className=\"all\">\n        <div className=\"image\">\n          <h1>Discover The World Through Surfing</h1>\n          <img src=\"/images/home.jpg\" alt=\"home\" />\n        </div>\n        <div className=\"resume\">\n          <p>\n            {\" \"}\n            \" Your waves it's born by the need of an open page that can show\n          </p>\n          <p>\n            the few important things to need to know about a specific surfing\n          </p>\n          <p>spot... Also it provides you the surf forecast of the day.</p>\n          <p>Everybody can check the info of the spots, and if you sign up</p>\n          <p> you can make your own post! Just to make it easier to make the</p>\n          <p>difficult decission of where to surf... \"</p>\n          <p>Go try it!</p>\n        </div>\n        <div className=\"spots-display\">\n          <h2>Check people favourite spots !</h2>\n          <img src=\"/images/spots.png\" alt=\"spots\" />\n\n          <Link to=\"/spots\">See all</Link>\n        </div>\n        <div className=\"surf-camp\">\n          <img src=\"/images/surf-camp.jpg\" alt=\"camp\" />\n          <h2> Get Discounts of our favourites surfcamps !</h2>\n          <button>\n            <a href=\"https://surfivorcamp.com/contacts/\">Contact</a>\n          </button>\n          <button>\n            <a href=\"https://surfivorcamp.com/5-best-surf-camps-for-beginners/\">\n              More information\n            </a>\n          </button>\n        </div>\n        <div className=\"discover\">\n          <h2>Discover The World With Us</h2>\n          <p>Stay tuned for our latest spots, surfcamps and much more...</p>\n          <input type=\"text\" placeholder=\"Email Address\" required />\n          <button> SIGN UP</button>\n        </div>\n      </div>\n    );\n  }\n}\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport AuthService from \"./components/services/Authservice\";\nimport Spots from \"./components/spots/Spots\";\n// import Profile from \"./components/Profile/Profile\";\nimport SpotCreation from \"./components/SpotCreation\";\nimport SpotsService from \"./components/services/SpotsService\";\nimport Home from \"./components/Home/Home\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedInUser: null,\n      spots: [],\n      filtered: [],\n      searchString: \"\"\n    };\n    this.service = new AuthService();\n\n    this.fetchUser();\n    this.spServices = new SpotsService();\n  }\n\n  getUser = userObj => {\n    this.setState(\n      {\n        loggedInUser: userObj\n      },\n      () => this.props.history.push(\"/\")\n    );\n  };\n\n  logout = () => {\n    this.service.logout().then(() => {\n      this.setState({ loggedInUser: null });\n    });\n  };\n\n  fetchUser() {\n    return this.service\n      .loggedin()\n      .then(response => {\n        this.setState({\n          loggedInUser: response\n        });\n      })\n      .catch(err => {\n        this.setState({\n          loggedInUser: false\n        });\n      });\n  }\n\n  componentDidMount() {\n    this.getAllSpots();\n  }\n\n  getAllSpots(cb) {\n    this.spServices.allSpots().then(data => {\n      this.setState(\n        {\n          ...this.state,\n          spots: data.spots,\n          filtered: data.spots\n        },\n        () => {\n          if (cb) cb();\n        }\n      );\n    });\n  }\n\n  searchSpots() {\n    let search = this.state.searchString;\n    let filteredSpots = this.state.spots.filter(item =>\n      item.name.toLowerCase().includes(search.toLowerCase())\n    );\n    this.setState({\n      ...this.state,\n      filtered: filteredSpots\n    });\n  }\n\n  checkSearch(e) {\n    this.setState(\n      {\n        ...this.state,\n        searchString: e.target.value\n      },\n      () => this.searchSpots()\n    );\n  }\n\n  render() {\n    if (this.state.loggedInUser) {\n      return (\n        <React.Fragment>\n          <Navbar\n            className=\"App-header\"\n            loggedInUser={this.state.loggedInUser}\n            logout={this.logout}\n            search={e => this.checkSearch(e)}\n          />\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => (\n                <div className=\"App\">\n                  <Home />\n                </div>\n              )}\n            />\n            <Route\n              exact\n              path=\"/spots\"\n              render={() => (\n                <div className=\"App\">\n                  <Spots spots={this.state.filtered} />\n                </div>\n              )}\n            />\n            <Route\n              exact\n              path=\"/create\"\n              render={() => {\n                return (\n                  <React.Fragment>\n                    <SpotCreation getAllSpotsFn={cb => this.getAllSpots(cb)} />\n                  </React.Fragment>\n                );\n              }}\n            />\n          </Switch>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <div className=\"App\">\n            <Navbar\n              userInSession={this.state.loggedInUser}\n              logout={this.logout}\n              search={e => this.checkSearch(e)}\n            />\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                render={() => (\n                  <div className=\"App\">\n                    <Home />\n                  </div>\n                )}\n              />\n              <Route\n                exact\n                path=\"/signup\"\n                render={() => (\n                  <div className=\"App\">\n                    <Signup getUser={this.getUser} />\n                    <Home />\n                  </div>\n                )}\n              />\n              <Route\n                exact\n                path=\"/login\"\n                render={() => (\n                  <div className=\"App\">\n                    <Login getUser={this.getUser} />\n                    <Home />\n                  </div>\n                )}\n              />\n              <Route\n                exact\n                path=\"/spots\"\n                render={() => <Spots spots={this.state.filtered} />}\n              />\n              <Route exact path=\"/\" render={() => <Home />} />\n            </Switch>\n          </div>\n          {/* <Spots spots={this.state.filtered} /> */}\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}